// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Metric struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MType                string   `protobuf:"bytes,2,opt,name=m_type,json=mType,proto3" json:"m_type,omitempty"`
	Delta                int64    `protobuf:"varint,3,opt,name=delta,proto3" json:"delta,omitempty"`
	Value                float64  `protobuf:"fixed64,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metric) Reset()         { *m = Metric{} }
func (m *Metric) String() string { return proto.CompactTextString(m) }
func (*Metric) ProtoMessage()    {}
func (*Metric) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *Metric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metric.Unmarshal(m, b)
}
func (m *Metric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metric.Marshal(b, m, deterministic)
}
func (m *Metric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metric.Merge(m, src)
}
func (m *Metric) XXX_Size() int {
	return xxx_messageInfo_Metric.Size(m)
}
func (m *Metric) XXX_DiscardUnknown() {
	xxx_messageInfo_Metric.DiscardUnknown(m)
}

var xxx_messageInfo_Metric proto.InternalMessageInfo

func (m *Metric) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Metric) GetMType() string {
	if m != nil {
		return m.MType
	}
	return ""
}

func (m *Metric) GetDelta() int64 {
	if m != nil {
		return m.Delta
	}
	return 0
}

func (m *Metric) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type MetricArray struct {
	Metrics              []*Metric `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MetricArray) Reset()         { *m = MetricArray{} }
func (m *MetricArray) String() string { return proto.CompactTextString(m) }
func (*MetricArray) ProtoMessage()    {}
func (*MetricArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *MetricArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricArray.Unmarshal(m, b)
}
func (m *MetricArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricArray.Marshal(b, m, deterministic)
}
func (m *MetricArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricArray.Merge(m, src)
}
func (m *MetricArray) XXX_Size() int {
	return xxx_messageInfo_MetricArray.Size(m)
}
func (m *MetricArray) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricArray.DiscardUnknown(m)
}

var xxx_messageInfo_MetricArray proto.InternalMessageInfo

func (m *MetricArray) GetMetrics() []*Metric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func init() {
	proto.RegisterType((*Metric)(nil), "gen.Metric")
	proto.RegisterType((*MetricArray)(nil), "gen.MetricArray")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xcf, 0x4b, 0xc3, 0x30,
	0x1c, 0xc5, 0x49, 0xeb, 0x3a, 0xf6, 0xad, 0x0c, 0x09, 0x2a, 0x61, 0x5e, 0xca, 0x40, 0xe8, 0x29,
	0x85, 0x29, 0xde, 0x2b, 0x78, 0xf4, 0x52, 0x3c, 0xe9, 0x41, 0x32, 0xf3, 0xb5, 0x04, 0x9a, 0x1f,
	0x64, 0x99, 0x90, 0xff, 0x5e, 0x9a, 0x50, 0xd8, 0xf1, 0xf3, 0x79, 0x8f, 0x07, 0x0f, 0x36, 0xc2,
	0x29, 0xee, 0xbc, 0x0d, 0x96, 0x96, 0x23, 0x9a, 0xdd, 0xc3, 0x68, 0xed, 0x38, 0x61, 0x97, 0xd4,
	0xf1, 0xfc, 0xdb, 0xa1, 0x76, 0x21, 0xe6, 0xc6, 0xfe, 0x0b, 0xaa, 0x77, 0x0c, 0x5e, 0xfd, 0xd0,
	0x2d, 0x14, 0x4a, 0x32, 0xd2, 0x90, 0x76, 0x33, 0x14, 0x4a, 0xd2, 0x3b, 0xa8, 0xf4, 0x77, 0x88,
	0x0e, 0x59, 0x91, 0xdc, 0x4a, 0x7f, 0x44, 0x87, 0xf4, 0x16, 0x56, 0x12, 0xa7, 0x20, 0x58, 0xd9,
	0x90, 0xb6, 0x1c, 0x32, 0xcc, 0xf6, 0x4f, 0x4c, 0x67, 0x64, 0x57, 0x0d, 0x69, 0xc9, 0x90, 0x61,
	0xff, 0x0c, 0x75, 0x1e, 0xef, 0xbd, 0x17, 0x91, 0x3e, 0xc2, 0x5a, 0x27, 0x3c, 0x31, 0xd2, 0x94,
	0x6d, 0x7d, 0xa8, 0xf9, 0x88, 0x86, 0xe7, 0xca, 0xb0, 0x64, 0x87, 0x1e, 0xd6, 0x59, 0x9d, 0xe8,
	0x0b, 0x40, 0x2f, 0xe5, 0x42, 0x37, 0x17, 0xf5, 0xb4, 0xb8, 0xbb, 0xe7, 0xf9, 0x1b, 0x5f, 0xbe,
	0xf1, 0xb7, 0xf9, 0xdb, 0xeb, 0xf6, 0xf3, 0x5a, 0x99, 0x80, 0xde, 0x88, 0xa9, 0x13, 0x4e, 0x1d,
	0xab, 0x94, 0x3f, 0xfd, 0x07, 0x00, 0x00, 0xff, 0xff, 0x2a, 0xa1, 0x5b, 0xbb, 0x1b, 0x01, 0x00,
	0x00,
}
